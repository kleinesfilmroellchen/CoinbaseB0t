name: Check and test spcasm

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
      - name: Output Rust version to file
        run: cargo --version > rust-version
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('rust-version') }}
      - name: Install nextest
        run: curl -LsSf https://get.nexte.st/latest/linux | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin

        # The binary build adds > 40 dependencies, so we would like to avoid it, but some integration tests depend on it.
        # Therefore, we first run a faster build that will report almost all errors immediately and cancel the CI run.
      - name: Build
        run: cargo build --verbose --no-default-features
        # After that, we build the remaining crates and binaries...
      - name: Build binaries
        run: cargo build --verbose --no-default-features --features binaries
        # ... and run the tests.
      - name: Run tests
        run: cargo nextest run --verbose --no-default-features --features binaries --config-file .github/nextest-ci.toml
      - name: Build sals
        run: cd sals && cargo build --verbose

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: clippy
      - name: Check style
        uses: actions-rs/clippy-check@v1.0.7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --workspace --tests --verbose --all-features
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: rustfmt
      - name: Check code format
        run: cargo fmt --all --check --verbose
