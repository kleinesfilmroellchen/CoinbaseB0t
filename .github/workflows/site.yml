name: Deploy website to GitHub Pages

on:
  push:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  create-page:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
      - name: Output Rust version to file
        run: cargo --version > rust-version
      - name: Cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('rust-version') }}-nodefault

      - name: Install wasm-pack
        uses: extractions/setup-crate@v1
        with:
          owner: rustwasm
          name: wasm-pack
      - name: Compile wasm module
        run: cd spcasm-web && wasm-pack --verbose build --verbose --features wee_alloc --no-default-features
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: "17.0"
          cache: "npm"
          cache-dependency-path: spcasm-web/www/package-lock.json
      - name: Install NPM modules
        run: cd spcasm-web/www && npm install --verbose
      - name: Build frontend
        run: cd spcasm-web/www && npm run build --verbose
      - name: Make site directory
        run: mkdir site
      - name: Copy frontend
        run: cp -rT spcasm-web/www/dist site

      - name: Install mdbook
        uses: extractions/setup-crate@v1
        with:
          owner: rust-lang
          name: mdBook
      - name: Install mdbook-linkcheck
        uses: extractions/setup-crate@v1
        with:
          owner: Michael-F-Bryan
          name: mdbook-linkcheck
      - name: Install mdbook-toc
        uses: extractions/setup-crate@v1
        with:
          owner: badboy
          name: mdbook-toc

      - name: Move README to doc folder
        run: chmod +x doc/copy-readme-for-gh-pages.sh && doc/copy-readme-for-gh-pages.sh
      - name: Build documentation
        run: cd doc && mdbook build
      - name: Copy documentation
        run: cp -rT doc/book/html site/doc

      - name: Upload page artifact
        uses: actions/upload-pages-artifact@v1.0.7
        with:
          path: site

  deploy:
    runs-on: ubuntu-latest
    needs: create-page
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
